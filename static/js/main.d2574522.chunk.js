(this.webpackJsonpshowcase=this.webpackJsonpshowcase||[]).push([[0],{20:function(e,a,t){e.exports=t(33)},25:function(e,a,t){},26:function(e,a,t){},33:function(e,a,t){"use strict";t.r(a);var n=t(0),l=t.n(n),c=t(16),r=t.n(c),o=(t(25),t(26),t(9)),s=t(8);function i(e){var a=e.onClear;return l.a.createElement("div",{onClick:a},"Clear")}function m(e){var a=l.a.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24"},l.a.createElement("path",{d:"M0 0h24v24H0z",fill:"none"}),l.a.createElement("path",{d:"M8.1 13.34l2.83-2.83L3.91 3.5c-1.56 1.56-1.56 4.09 0 5.66l4.19 4.18zm6.78-1.81c1.53.71 3.68.21 5.27-1.38 1.91-1.91 2.28-4.65.81-6.12-1.46-1.46-4.2-1.1-6.12.81-1.59 1.59-2.09 3.74-1.38 5.27L3.7 19.87l1.41 1.41L12 14.41l6.88 6.88 1.41-1.41L13.41 13l1.47-1.47z"}));return l.a.createElement("div",{className:"my-result ".concat(e.isSelected?"-selected":"")},l.a.createElement("div",{className:"icon"},a),l.a.createElement(s.components.Result,e))}function u(){var e=l.a.useState(0),a=Object(o.a)(e,2),t=a[0],n=a[1],c=l.a.useState(0),r=Object(o.a)(c,2),u=r[0],h=r[1],d=l.a.useState(0),p=Object(o.a)(d,2),E=p[0],g=p[1];return l.a.createElement(l.a.Fragment,null,l.a.createElement("div",{className:"header"},l.a.createElement("div",{className:"section"},l.a.createElement("h1",null,"Tomtom React Searchbox"),"Lightweight & easily customizable searchbox component.",l.a.createElement("div",{className:"select-wrapper"},l.a.createElement(s.SearchBox,{autofocus:!0,placeholder:"Search for an address",searchOptions:{key:Object({NODE_ENV:"production",PUBLIC_URL:"."}).REACT_APP_TOMTOM_SEARCH_API_KEY,language:"en-Gb",limit:5,typeahead:!0}})))),l.a.createElement("div",{className:"section"},l.a.createElement("div",{className:"subsection"},l.a.createElement("h2",null,"Installation"),l.a.createElement("pre",null,l.a.createElement("code",{className:"language-"},"npm i --save tomtom-react-searchbox"))),l.a.createElement("div",{className:"subsection"},l.a.createElement("h2",null,"Basic usage"),l.a.createElement("pre",null,l.a.createElement("code",{className:"language-jsx"},"<TomtomReactSearchbox\n    placeholder=\"Search for an address\"\n    searchOptions={{\n      key: 'your-api-key',\n      language: 'en-Gb',\n      limit: 5,\n      typeahead: true\n    }}\n  />"))),l.a.createElement("div",{className:"subsection"},l.a.createElement("h2",null,"Features"),l.a.createElement("h3",null,"Customize behaviour"),'Control when call is triggered by specifying "minNumbOfChars" prop.',l.a.createElement("div",{className:"select-wrapper"},l.a.createElement(s.SearchBox,{minNumbOfChars:5,placeholder:"Typing 5 characters will trigger request",searchOptions:{key:Object({NODE_ENV:"production",PUBLIC_URL:"."}).REACT_APP_TOMTOM_SEARCH_API_KEY,language:"en-Gb",limit:5,typeahead:!0}})),l.a.createElement("pre",{"data-line":"2"},l.a.createElement("code",{className:"language-jsx"},"<TomtomReactSearchbox\n    minNumbOfChars={5}\n    placeholder=\"Typing 5 characters will trigger request\"\n    searchOptions={{\n      key: 'your-api-key',\n      language: 'en-Gb',\n      limit: 5,\n      typeahead: true\n    }}\n  />"))),l.a.createElement("div",{className:"subsection"},l.a.createElement("h3",null,"React to the events"),"There are 3 callbacks provided: ",l.a.createElement("code",null,"onResultsFetch")," - called every time search results are retrieved from the api, ",l.a.createElement("code",null,"onResultSelect")," - called when search result is clicked, and ",l.a.createElement("code",null,"onResultSelect")," - called when result is selected by using arrow keys. Check it out yourself:",l.a.createElement("div",null,l.a.createElement("ul",null,l.a.createElement("li",null,"onResultsFetch called times: ",t),l.a.createElement("li",null,"onResultChoose called times: ",u),l.a.createElement("li",null,"onResultSelect called times: ",E))),l.a.createElement("div",{className:"select-wrapper"},l.a.createElement(s.SearchBox,{onResultsFetch:function(e){n(t+1),console.log(e)},onResultChoose:function(e){h(u+1),console.log(e)},onResultSelect:function(e){g(E+1),console.log(e)},placeholder:"Play around to see triggered events",searchOptions:{key:Object({NODE_ENV:"production",PUBLIC_URL:"."}).REACT_APP_TOMTOM_SEARCH_API_KEY,language:"en-Gb",limit:5,typeahead:!0}})),l.a.createElement("pre",{"data-line":"2,3,4"},l.a.createElement("code",{className:"language-jsx"},"<TomtomReactSearchbox\n    onResultsFetch={(results) => console.log(results)}\n    onResultChoose={(result) => console.log(result)}\n    onResultSelect={(result) => console.log(result)}\n    placeholder=\"Play around to see triggered events\"\n    searchOptions={{\n      key: 'your-api-key',\n      language: 'en-Gb',\n      limit: 5,\n      typeahead: true\n    }}\n  />"))),l.a.createElement("div",{className:"subsection"},l.a.createElement("h2",null,"Components API"),"Components API lets use completely replace searchbox's components or wrap default ones into your owns.",l.a.createElement("div",{className:"select-wrapper"},l.a.createElement(s.SearchBox,{placeholder:"Search for a restaurant",components:{Clear:i,Result:m},searchOptions:{key:Object({NODE_ENV:"production",PUBLIC_URL:"."}).REACT_APP_TOMTOM_SEARCH_API_KEY,language:"en-Gb",limit:5,categorySet:"7315",typeahead:!0}})),l.a.createElement("pre",{"data-line":"23,24,25,26"},l.a.createElement("code",{className:"language-jsx"},'import {\n    SearchBox as TomtomReactSearchbox,\n    components\n  } from \'tomtom-react-searchbox\';\n\n  function CustomClear({ onClear }) {\n    return <div onClick={onClear}>Clear</div>;\n  }\n\n  function CustomResult(props) {\n    const icon = <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M0 0h24v24H0z" fill="none"/><path d="M8.1 13.34l2.83-2.83L3.91 3.5c-1.56 1.56-1.56 4.09 0 5.66l4.19 4.18zm6.78-1.81c1.53.71 3.68.21 5.27-1.38 1.91-1.91 2.28-4.65.81-6.12-1.46-1.46-4.2-1.1-6.12.81-1.59 1.59-2.09 3.74-1.38 5.27L3.7 19.87l1.41 1.41L12 14.41l6.88 6.88 1.41-1.41L13.41 13l1.47-1.47z"/></svg>;\n    return (\n      <div\n        className={`my-result ${props.isSelected ? \'-selected\' : \'\'}`}>\n        <div className="icon">{icon}</div>\n        <components.Result {...props} />\n      </div>\n    );\n  }\n\n  <TomtomReactSearchbox\n  placeholder=\'Search for a restaurant\'\n  components={{\n    Clear: CustomClear,\n    Result: CustomResult\n  }}\n  searchOptions={{\n    key: \'your-api-key\',\n    language: \'en-Gb\',\n    limit: 5,\n    typeahead: true,\n    categorySet: \'7315\'\n  }} />\n  </div>')))))}var h=t(17),d=t(5);var p=function(){return l.a.createElement(h.a,{basename:"/"},l.a.createElement(d.c,null,l.a.createElement(d.a,{path:"/tomtom-react-searchbox",component:u})))};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));r.a.render(l.a.createElement(p,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()}))}},[[20,1,2]]]);
//# sourceMappingURL=main.d2574522.chunk.js.map